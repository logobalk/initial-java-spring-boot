package com.siampharm.sampling.model;
// Generated Feb 25, 2019 2:45:54 PM by Hibernate Tools 5.2.11.Final

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * PoItems generated by hbm2java
 */
@Entity
@Table(name = "po_items", schema = "bpi" )
public class PoItems implements java.io.Serializable {
	private static final long serialVersionUID = 2620159661845577905L;
	private Integer id;
	private Material material;
	private MaterialGroup materialGroup;
	private MaterialType materialType;
	private MsItemStatus msItemStatus;
	private MsPlant msPlant;
	private Po po;
	private Integer parentId;
	private Integer lineItem;
	private BigDecimal materialQuantity;
	private String unitOfMature;
	private String shippingInstruction;
	private String deliveryComplete;
	private String deletionFlag;
	private String valuationClass;
	private String rawMatActive;
	private String activeRm;
	private BigDecimal deliveryQuantity;
	private String vendorBatch;
	private BigDecimal underTol;
	private Boolean unlimited;
	private BigDecimal overTol;
	private BigDecimal udtQty;
	private BigDecimal odtQty;
	private String stockRemoval;
	private String storageUnitType;
	private String remark;
	private String countryOfOrigin;
	private String manufacturer;
	private String sorTor;
	private Boolean isClosed;
	private Date closedDate;
	private String closedBy;
	private String changeRemark;
	private Boolean isDeleted;
	private String createdBy;
	private Date createdDate;
	private String updatedBy;
	private Date updatedDate;
	private Set<PoItemsSchedule> poItemsSchedules = new HashSet<PoItemsSchedule>(0);
	private Set<PoItemsIssues> poItemsIssueses = new HashSet<PoItemsIssues>(0);
	private Set<PoItemInspection> poItemInspections = new HashSet<PoItemInspection>(0);
	private Set<PoItemsQiRelease> poItemsQiReleases = new HashSet<PoItemsQiRelease>(0);
	private Set<PoItemsBatch> poItemsBatches = new HashSet<PoItemsBatch>(0);
	private Set<PoItemsQi> poItemsQis = new HashSet<PoItemsQi>(0);
	private Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches = new HashSet<PoItemsConfirmationDnBatch>(0);
	private Set<PoMatchItems> poMatchItemsesForSbPoItemId = new HashSet<PoMatchItems>(0);
	private Set<PoItemsConfirmation> poItemsConfirmations = new HashSet<PoItemsConfirmation>(0);
	private Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches_1 = new HashSet<PoItemsConfirmationDnBatch>(0);
	private Set<PoMatchItems> poMatchItemsesForSpPoItemId = new HashSet<PoMatchItems>(0);

	public PoItems() {
	}

	public PoItems(Integer id, Material material, Po po, Boolean isDeleted, String createdBy, Date createdDate) {
		this.id = id;
		this.material = material;
		this.po = po;
		this.isDeleted = isDeleted;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
	}

	public PoItems(Integer id, Material material, MaterialGroup materialGroup, MaterialType materialType,
			MsItemStatus msItemStatus, MsPlant msPlant, Po po, Integer parentId, Integer lineItem,
			BigDecimal materialQuantity, String unitOfMature, String shippingInstruction, String deliveryComplete,
			String deletionFlag, String valuationClass, String rawMatActive, String activeRm,
			BigDecimal deliveryQuantity, String vendorBatch, BigDecimal underTol, Boolean unlimited, BigDecimal overTol,
			BigDecimal udtQty, BigDecimal odtQty, String stockRemoval, String storageUnitType, String remark,
			String countryOfOrigin, String manufacturer, String sorTor, Boolean isClosed, Date closedDate,
			String closedBy, String changeRemark, Boolean isDeleted, String createdBy, Date createdDate,
			String updatedBy, Date updatedDate, Set<PoItemsSchedule> poItemsSchedules,
			Set<PoItemsIssues> poItemsIssueses, Set<PoItemInspection> poItemInspections,
			Set<PoItemsQiRelease> poItemsQiReleases,
			Set<PoItemsBatch> poItemsBatches, Set<PoItemsQi> poItemsQis,
			Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches, Set<PoMatchItems> poMatchItemsesForSbPoItemId,
			Set<PoItemsConfirmation> poItemsConfirmations,
			Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches_1,
			Set<PoMatchItems> poMatchItemsesForSpPoItemId) {
		this.id = id;
		this.material = material;
		this.materialGroup = materialGroup;
		this.materialType = materialType;
		this.msItemStatus = msItemStatus;
		this.msPlant = msPlant;
		this.po = po;
		this.parentId = parentId;
		this.lineItem = lineItem;
		this.materialQuantity = materialQuantity;
		this.unitOfMature = unitOfMature;
		this.shippingInstruction = shippingInstruction;
		this.deliveryComplete = deliveryComplete;
		this.deletionFlag = deletionFlag;
		this.valuationClass = valuationClass;
		this.rawMatActive = rawMatActive;
		this.activeRm = activeRm;
		this.deliveryQuantity = deliveryQuantity;
		this.vendorBatch = vendorBatch;
		this.underTol = underTol;
		this.unlimited = unlimited;
		this.overTol = overTol;
		this.udtQty = udtQty;
		this.odtQty = odtQty;
		this.stockRemoval = stockRemoval;
		this.storageUnitType = storageUnitType;
		this.remark = remark;
		this.countryOfOrigin = countryOfOrigin;
		this.manufacturer = manufacturer;
		this.sorTor = sorTor;
		this.isClosed = isClosed;
		this.closedDate = closedDate;
		this.closedBy = closedBy;
		this.changeRemark = changeRemark;
		this.isDeleted = isDeleted;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
		this.poItemsSchedules = poItemsSchedules;
		this.poItemsIssueses = poItemsIssueses;
		this.poItemInspections = poItemInspections;
		this.poItemsQiReleases = poItemsQiReleases;
		this.poItemsBatches = poItemsBatches;
		this.poItemsQis = poItemsQis;
		this.poItemsConfirmationDnBatches = poItemsConfirmationDnBatches;
		this.poMatchItemsesForSbPoItemId = poMatchItemsesForSbPoItemId;
		this.poItemsConfirmations = poItemsConfirmations;
		this.poItemsConfirmationDnBatches_1 = poItemsConfirmationDnBatches_1;
		this.poMatchItemsesForSpPoItemId = poMatchItemsesForSpPoItemId;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "material_id", nullable = false)
	public Material getMaterial() {
		return this.material;
	}

	public void setMaterial(Material material) {
		this.material = material;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "material_group_id")
	public MaterialGroup getMaterialGroup() {
		return this.materialGroup;
	}

	public void setMaterialGroup(MaterialGroup materialGroup) {
		this.materialGroup = materialGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "material_type_id")
	public MaterialType getMaterialType() {
		return this.materialType;
	}

	public void setMaterialType(MaterialType materialType) {
		this.materialType = materialType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_status_id")
	public MsItemStatus getMsItemStatus() {
		return this.msItemStatus;
	}

	public void setMsItemStatus(MsItemStatus msItemStatus) {
		this.msItemStatus = msItemStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "plant_id")
	public MsPlant getMsPlant() {
		return this.msPlant;
	}

	public void setMsPlant(MsPlant msPlant) {
		this.msPlant = msPlant;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "po_id", nullable = false)
	public Po getPo() {
		return this.po;
	}

	public void setPo(Po po) {
		this.po = po;
	}

	@Column(name = "parent_id")
	public Integer getParentId() {
		return this.parentId;
	}

	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}

	@Column(name = "line_item")
	public Integer getLineItem() {
		return this.lineItem;
	}

	public void setLineItem(Integer lineItem) {
		this.lineItem = lineItem;
	}

	@Column(name = "material_quantity", precision = 16, scale = 3)
	public BigDecimal getMaterialQuantity() {
		return this.materialQuantity;
	}

	public void setMaterialQuantity(BigDecimal materialQuantity) {
		this.materialQuantity = materialQuantity;
	}

	@Column(name = "unit_of_mature", length = 15)
	public String getUnitOfMature() {
		return this.unitOfMature;
	}

	public void setUnitOfMature(String unitOfMature) {
		this.unitOfMature = unitOfMature;
	}

	@Column(name = "shipping_instruction", length = 2)
	public String getShippingInstruction() {
		return this.shippingInstruction;
	}

	public void setShippingInstruction(String shippingInstruction) {
		this.shippingInstruction = shippingInstruction;
	}

	@Column(name = "delivery_complete", length = 1)
	public String getDeliveryComplete() {
		return this.deliveryComplete;
	}

	public void setDeliveryComplete(String deliveryComplete) {
		this.deliveryComplete = deliveryComplete;
	}

	@Column(name = "deletion_flag", length = 1)
	public String getDeletionFlag() {
		return this.deletionFlag;
	}

	public void setDeletionFlag(String deletionFlag) {
		this.deletionFlag = deletionFlag;
	}

	@Column(name = "valuation_class", length = 4)
	public String getValuationClass() {
		return this.valuationClass;
	}

	public void setValuationClass(String valuationClass) {
		this.valuationClass = valuationClass;
	}

	@Column(name = "raw_mat_active", length = 1)
	public String getRawMatActive() {
		return this.rawMatActive;
	}

	public void setRawMatActive(String rawMatActive) {
		this.rawMatActive = rawMatActive;
	}

	@Column(name = "active_rm", length = 10)
	public String getActiveRm() {
		return this.activeRm;
	}

	public void setActiveRm(String activeRm) {
		this.activeRm = activeRm;
	}

	@Column(name = "delivery_quantity", precision = 16, scale = 3)
	public BigDecimal getDeliveryQuantity() {
		return this.deliveryQuantity;
	}

	public void setDeliveryQuantity(BigDecimal deliveryQuantity) {
		this.deliveryQuantity = deliveryQuantity;
	}

	@Column(name = "vendor_batch", length = 35)
	public String getVendorBatch() {
		return this.vendorBatch;
	}

	public void setVendorBatch(String vendorBatch) {
		this.vendorBatch = vendorBatch;
	}

	@Column(name = "under_tol", precision = 5)
	public BigDecimal getUnderTol() {
		return this.underTol;
	}

	public void setUnderTol(BigDecimal underTol) {
		this.underTol = underTol;
	}

	@Column(name = "unlimited")
	public Boolean getUnlimited() {
		return this.unlimited;
	}

	public void setUnlimited(Boolean unlimited) {
		this.unlimited = unlimited;
	}

	@Column(name = "over_tol", precision = 5)
	public BigDecimal getOverTol() {
		return this.overTol;
	}

	public void setOverTol(BigDecimal overTol) {
		this.overTol = overTol;
	}

	@Column(name = "udt_qty", precision = 16, scale = 3)
	public BigDecimal getUdtQty() {
		return this.udtQty;
	}

	public void setUdtQty(BigDecimal udtQty) {
		this.udtQty = udtQty;
	}

	@Column(name = "odt_qty", precision = 16, scale = 3)
	public BigDecimal getOdtQty() {
		return this.odtQty;
	}

	public void setOdtQty(BigDecimal odtQty) {
		this.odtQty = odtQty;
	}

	@Column(name = "stock_removal", length = 3)
	public String getStockRemoval() {
		return this.stockRemoval;
	}

	public void setStockRemoval(String stockRemoval) {
		this.stockRemoval = stockRemoval;
	}

	@Column(name = "storage_unit_type", length = 2)
	public String getStorageUnitType() {
		return this.storageUnitType;
	}

	public void setStorageUnitType(String storageUnitType) {
		this.storageUnitType = storageUnitType;
	}

	@Column(name = "remark", length = 250)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Column(name = "country_of_origin")
	public String getCountryOfOrigin() {
		return this.countryOfOrigin;
	}

	public void setCountryOfOrigin(String countryOfOrigin) {
		this.countryOfOrigin = countryOfOrigin;
	}

	@Column(name = "manufacturer")
	public String getManufacturer() {
		return this.manufacturer;
	}

	public void setManufacturer(String manufacturer) {
		this.manufacturer = manufacturer;
	}

	@Column(name = "sor_tor")
	public String getSorTor() {
		return this.sorTor;
	}

	public void setSorTor(String sorTor) {
		this.sorTor = sorTor;
	}

	@Column(name = "is_closed")
	public Boolean getIsClosed() {
		return this.isClosed;
	}

	public void setIsClosed(Boolean isClosed) {
		this.isClosed = isClosed;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "closed_date", length = 23)
	public Date getClosedDate() {
		return this.closedDate;
	}

	public void setClosedDate(Date closedDate) {
		this.closedDate = closedDate;
	}

	@Column(name = "closed_by", length = 50)
	public String getClosedBy() {
		return this.closedBy;
	}

	public void setClosedBy(String closedBy) {
		this.closedBy = closedBy;
	}

	@Column(name = "change_remark")
	public String getChangeRemark() {
		return this.changeRemark;
	}

	public void setChangeRemark(String changeRemark) {
		this.changeRemark = changeRemark;
	}

	@Column(name = "is_deleted", nullable = false)
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "created_by", nullable = false, length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", length = 50)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 23)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsSchedule> getPoItemsSchedules() {
		return this.poItemsSchedules;
	}

	public void setPoItemsSchedules(Set<PoItemsSchedule> poItemsSchedules) {
		this.poItemsSchedules = poItemsSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsIssues> getPoItemsIssueses() {
		return this.poItemsIssueses;
	}

	public void setPoItemsIssueses(Set<PoItemsIssues> poItemsIssueses) {
		this.poItemsIssueses = poItemsIssueses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemInspection> getPoItemInspections() {
		return this.poItemInspections;
	}

	public void setPoItemInspections(Set<PoItemInspection> poItemInspections) {
		this.poItemInspections = poItemInspections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsQiRelease> getPoItemsQiReleases() {
		return this.poItemsQiReleases;
	}

	public void setPoItemsQiReleases(Set<PoItemsQiRelease> poItemsQiReleases) {
		this.poItemsQiReleases = poItemsQiReleases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsBatch> getPoItemsBatches() {
		return this.poItemsBatches;
	}

	public void setPoItemsBatches(Set<PoItemsBatch> poItemsBatches) {
		this.poItemsBatches = poItemsBatches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsQi> getPoItemsQis() {
		return this.poItemsQis;
	}

	public void setPoItemsQis(Set<PoItemsQi> poItemsQis) {
		this.poItemsQis = poItemsQis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsConfirmationDnBatch> getPoItemsConfirmationDnBatches() {
		return this.poItemsConfirmationDnBatches;
	}

	public void setPoItemsConfirmationDnBatches(Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches) {
		this.poItemsConfirmationDnBatches = poItemsConfirmationDnBatches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItemsBySbPoItemId")
	public Set<PoMatchItems> getPoMatchItemsesForSbPoItemId() {
		return this.poMatchItemsesForSbPoItemId;
	}

	public void setPoMatchItemsesForSbPoItemId(Set<PoMatchItems> poMatchItemsesForSbPoItemId) {
		this.poMatchItemsesForSbPoItemId = poMatchItemsesForSbPoItemId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsConfirmation> getPoItemsConfirmations() {
		return this.poItemsConfirmations;
	}

	public void setPoItemsConfirmations(Set<PoItemsConfirmation> poItemsConfirmations) {
		this.poItemsConfirmations = poItemsConfirmations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItems")
	public Set<PoItemsConfirmationDnBatch> getPoItemsConfirmationDnBatches_1() {
		return this.poItemsConfirmationDnBatches_1;
	}

	public void setPoItemsConfirmationDnBatches_1(Set<PoItemsConfirmationDnBatch> poItemsConfirmationDnBatches_1) {
		this.poItemsConfirmationDnBatches_1 = poItemsConfirmationDnBatches_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poItemsBySpPoItemId")
	public Set<PoMatchItems> getPoMatchItemsesForSpPoItemId() {
		return this.poMatchItemsesForSpPoItemId;
	}

	public void setPoMatchItemsesForSpPoItemId(Set<PoMatchItems> poMatchItemsesForSpPoItemId) {
		this.poMatchItemsesForSpPoItemId = poMatchItemsesForSpPoItemId;
	}

}
